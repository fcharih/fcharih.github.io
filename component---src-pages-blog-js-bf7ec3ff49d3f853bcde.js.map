{"version":3,"sources":["webpack:///./src/components/Header.module.scss","webpack:///./src/components/Template.module.scss","webpack:///./src/components/Header.js","webpack:///./src/components/Template.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/blog.js"],"names":["module","exports","location","globalHistory","pathname","includes","className","styles","container","to","replace","pageName","children","Header","mainContent","_objectDestructuringEmpty","obj","TypeError","BlogPage","pageLang","show","lang","display","style","textAlign"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,oC,qBCA9BD,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,wC,2ICKjE,cAAS,eACtB,IAAMC,EAAWC,gBAAcD,SAK/B,MAAiB,QAJAC,gBAAcD,SAASE,SAASC,SAAS,OACtD,KACA,MAIA,yBAAKC,UAAWC,IAAOC,WACrB,kBAAC,OAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,OAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,OAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,OAAD,CAAMA,GAAG,OAAT,MACA,kBAAC,OAAD,CAAMA,GAAG,SAAT,QACA,kBAAC,OAAD,CAAMA,GAAE,MAAQP,EAASE,UAAzB,kBAKF,yBAAKE,UAAWC,IAAOC,WACrB,kBAAC,OAAD,CAAMC,GAAG,QAAT,WACA,kBAAC,OAAD,CAAMA,GAAG,gBAAT,aACA,kBAAC,OAAD,CAAMA,GAAG,aAAT,WACA,kBAAC,OAAD,CAAMA,GAAG,UAAT,MACA,kBAAC,OAAD,CAAMA,GAAG,YAAT,QACA,kBAAC,OAAD,CAAMA,GAAIP,EAASE,SAASM,QAAQ,MAAO,KAA3C,kB,qBCzBO,gBAA4B,EAAzBC,SAA0B,IAAhBC,EAAe,EAAfA,SACpBV,EAAWC,gBAAcD,SAC/B,OACE,yBAAKI,UAAWC,IAAOC,WACrB,kBAACK,EAAD,CAAQX,SAAUA,IAClB,0BAAMI,UAAWC,IAAOO,aAAcF,M,oCCX7B,SAASG,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCADvC,mC,kCCAA,oEA+BeC,UAxBE,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACZiB,EAAYhB,gBAAcD,SAASE,SAASC,SAAS,OAEvD,KADA,KAGEe,EAAO,SAACC,GACZ,MAAa,OAATA,GAA8B,OAAbF,GACH,OAATE,GAA8B,OAAbF,EADqB,CAAEG,QAAS,SAE9C,CAAEA,QAAS,SAGzB,OACE,gBAAC,IAAD,CAAUpB,SAAUA,GAClB,uBAAKI,UAAWC,IAAOC,WACrB,kCACA,uBAAKe,MAAO,CAAEC,UAAW,WACvB,uBAAKD,MAAOH,EAAK,OAAjB,uCACA,uBAAKG,MAAOH,EAAK,OAAjB","file":"component---src-pages-blog-js-bf7ec3ff49d3f853bcde.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header-module--container--18k5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Template-module--container--30-GU\",\"mainContent\":\"Template-module--mainContent--3nUdu\"};","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { globalHistory } from \"@reach/router\";\n\nimport styles from \"./Header.module.scss\";\n\nexport default ({}) => {\n  const location = globalHistory.location;\n  const pageLang = globalHistory.location.pathname.includes(\"/fr\")\n    ? \"fr\"\n    : \"en\";\n\n  if (pageLang === \"en\") {\n    return (\n      <nav className={styles.container}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/research\">Research</Link>\n        <Link to=\"/music\">Music</Link>\n        <Link to=\"/cv\">CV</Link>\n        <Link to=\"/blog\">Blog</Link>\n        <Link to={`/fr${location.pathname}`}>ðŸ‡«ðŸ‡· FranÃ§ais</Link>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className={styles.container}>\n        <Link to=\"/fr/\">Accueil</Link>\n        <Link to=\"/fr/research\">Recherche</Link>\n        <Link to=\"/fr/music\">Musique</Link>\n        <Link to=\"/fr/cv\">CV</Link>\n        <Link to=\"/fr/blog\">Blog</Link>\n        <Link to={location.pathname.replace(\"/fr\", \"\")}>ðŸ‡¬ðŸ‡§ English</Link>\n      </nav>\n    );\n  }\n};\n","import React from \"react\";\nimport { globalHistory } from \"@reach/router\";\n\nimport Header from \"./Header\";\nimport styles from \"./Template.module.scss\";\n\nexport default ({ pageName, children }) => {\n  const location = globalHistory.location;\n  return (\n    <div className={styles.container}>\n      <Header location={location} />\n      <main className={styles.mainContent}>{children}</main>\n    </div>\n  );\n};\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import * as React from \"react\";\nimport { globalHistory } from \"@reach/router\";\n\nimport Template from \"../components/Template\";\n\nimport styles from \"./blog.module.scss\";\n\nconst BlogPage = ({ location }) => {\n  const pageLang = !globalHistory.location.pathname.includes(\"/fr\")\n    ? \"en\"\n    : \"fr\";\n\n  const show = (lang) => {\n    if (lang === \"en\" && pageLang === \"en\") return { display: \"block\" };\n    else if (lang === \"fr\" && pageLang === \"fr\") return { display: \"block\" };\n    else return { display: \"none\" };\n  };\n\n  return (\n    <Template location={location}>\n      <div className={styles.container}>\n        <h1>Blog</h1>\n        <div style={{ textAlign: \"center\" }}>\n          <div style={show(\"fr\")}>S'il-vous-plait repasser plus tard!</div>\n          <div style={show(\"en\")}>Please come back later!</div>\n        </div>\n      </div>\n    </Template>\n  );\n};\n\nexport default BlogPage;\n"],"sourceRoot":""}